package com.company.project.EndersOverFlow.service;


import org.springframework.beans.factory.annotation.Autowired; 
import org.springframework.stereotype.Service;

import com.company.project.EndersOverFlow.model.Comments;
import com.company.project.EndersOverFlow.repository.CommentsRepository;

import java.util.ArrayList; 
import java.util.List; 
import java.util.Optional;
@Service 
public class CommentsService { 
	@Autowired 
	private CommentsRepository commentsRepository; 
	
	public List<Comments> codeReviewFindAll() { 
		List<Comments> codeReview = new ArrayList<>(); 
		commentsRepository.findAll().forEach(e -> codeReview.add(e)); 
		return codeReview; 
	} 
	
	public Optional<Comments> codeReviewFindById(Long CR_NO) { 
		Optional<Comments> codeReview = commentsRepository.findById(CR_NO);
		return codeReview; 
	} 
	
	public void codeReviewDeleteById(Long CR_NO) { 
		commentsRepository.deleteById(CR_NO); 
	} 
	
	public Comments save(Comments codeReview) { 
		commentsRepository.save(codeReview); return codeReview; 
	} 
	
	public void codeReviewUpdateById(Long CR_NO, Comments comments) { 
		Optional<Comments> commentsOptional = commentsRepository.findById(CR_NO); 
		if (commentsOptional.isPresent()) { 
			commentsOptional.get().setCR_NO(comments.getCR_NO());
			commentsOptional.get().setCR_TITLE(comments.getCR_TITLE());
			commentsOptional.get().setCR_CREATER(comments.getCR_CREATER());
			commentsOptional.get().setCR_CONTENTS(comments.getCR_CONTENTS());
			commentsOptional.get().setCR_CREATEDAY(comments.getCR_CREATEDAY());
			commentsOptional.get().setCR_UPDATEDAY(comments.getCR_UPDATEDAY());
			commentsOptional.get().setCR_ISVIEW(comments.getCR_ISVIEW());
			commentsOptional.get().setCR_STAR_COUNT(comments.getCR_STAR_COUNT());
			commentsRepository.save(comments);
		} 
	} 
}


